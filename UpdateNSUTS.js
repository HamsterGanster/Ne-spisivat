// –ù—É–∂–Ω–æ –±—Ä–∞—É–∑–µ—Ä–Ω–æ–µ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ "User JavaScript and CSS"

// –í –Ω—ë–º —Å—Ç–∞–≤–∏—Ç–µ —Å—Å—ã–ª–∫—É —Ç–∞–±–ª–∏—Ü—É —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏ –≤–∞—à–∏—Ö –ø–æ—Å—ã–ª–æ–∫: 
// https://fresh.nsuts.ru/nsuts-new/new_report

// –ï—Å–ª–∏ —à–∞—Ä–∏—Ç–µ –∑–∞ Java-script –º–æ–∂–µ—Ç–µ —Å–≤–æ—ë —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–æ–±–∞–≤–∏—Ç—å
// –•–æ—Ç—è —Ü–≤–µ—Ç–∞ —Å–º–æ–∂–µ—Ç–µ –ø–æ–º–µ–Ω—è—Ç—å –∏ –±–µ–∑ –µ–≥–æ –∑–Ω–∞–Ω–∏—è, –¥—É–º–∞—é


// –í—Å—Ç–∞–≤–ª—è–µ—Ç–µ —ç—Ç–æ—Ç –∫–æ–¥ –≤ –ø–æ–ª–µ –¥–ª—è JS, Ctrl+S (—Å–æ—Ö—Ä–∞–Ω–∏—Ç—å):

let how_often = 100; // –≤—Ä–µ–º—è –≤ –º—Å, –∫–∞–∫ —á–∞—Å—Ç–æ –æ–±–Ω–æ–≤–ª—è—Ç—å —Ç–µ–∫—Å—Ç

// —Ñ—É–Ω–∫—Ü–∏—è —á–∏—Å—Ç–æ –∏–∑ –ò–Ω—Ç–µ—Ä–Ω–µ—Ç–∞
HTMLElement.prototype.getNodesByText = function (text) {
  const expr = `.//*[text()[contains(
    translate(.,
      'ABCDEFGHIJKLMNOPQRSTUVWXYZ–ê–ë–í–ì–î–ï–Å–ñ–ó–ò–ô–ö–õ–ú–ù–û–ü–†–°–¢–£–§–•–¶–ß–®–©–™–´–¨–≠–Æ–Ø',
      'abcdefghijklmnopqrstuvwxyz–∞–±–≤–≥–¥–µ—ë–∂–∑–∏–π–∫–ª–º–Ω–æ–ø—Ä—Å—Ç—É—Ñ—Ö—Ü—á—à—â—ä—ã—å—ç—é—è'
    ),
    '${text.toLowerCase()}'
  )]]`;    /* –∫–æ–º–º–µ–Ω—Ç-–∫–æ—Å—Ç—ã–ª—å */
  const nodeSet = document.evaluate(expr, this, null,
    XPathResult.ORDERED_NODE_SNAPSHOT_TYPE,
  null);
  return Array.from({ length: nodeSet.snapshotLength },
    (v, i) => nodeSet.snapshotItem(i)
  );
};


// —Ç—É—Ç —É–∂–µ —Å–∞–º))
setInterval(function () { 
	document.body.getNodesByText('YOUR TEXT').forEach(
		el => {
			// –ø—Ä–æ—Å—Ç–æ –∑–∞–º–µ–Ω–∏—Ç—å —Ç–µ–∫—Å—Ç. –ú–æ–∂–µ—Ç –≤—ã–π—Ç–∏: "<b> text </b>"
			el.textContent = 'NEW TEXT';
			
			// –µ—Å–ª–∏ —Ö–æ—á–µ—à—å –Ω–µ –ø—Ä–æ—Å—Ç–æ —Ç–µ–∫—Å—Ç, –∞ –∏–∑–º–µ–Ω–∏—Ç—å html.
			// –ú–æ–∂–µ—Ç –≤—ã–π—Ç: text, –Ω–æ –∂–∏—Ä–Ω—ã–º —à—Ä–∏—Ñ—Ç–æ–º
			el.innerHTML   = 'NEW TEXT'.bold(); 
			
			// You can insert more parameters, for example:
			//el.style.backgroundColor = '#7f7';
		}
	);
	
	// document.body.getNodesByText('üêù Testing...').forEach(
 //       el => {
 //           el.textContent = 'üêù –¢–∞–∫, –Ω—É, –ø–æ–¥–æ–∂–¥–∏—Ç–µ...';
 //       }
 //   );
	
	document.body.getNodesByText('üèÜ ACCEPTED').forEach(
        el => {
            el.textContent = 'üèÜ ASSEPTED';
            el.style.backgroundColor = '#0f02';
            el.style.textAlign = 'center';
        }
    );

    document.body.getNodesByText('üöß Compile Error').forEach(
        el => {
            el.textContent = 'üöß Compile Error';
        }
    );

    document.body.getNodesByText('ü•∂ Deadlock - Timeout').forEach(
        el => {
            el.textContent = 'ü•∂ Deadlock - Timeout';
        }
    );

    document.body.getNodesByText('ü§¢ Judgement Failed').forEach(
        el => {
            el.textContent = 'ü§¢ Judgement Failed';
        }
    );

    document.body.getNodesByText('ü§Æ Jury Error').forEach(
        el => {
            el.textContent = 'ü§Æ Jury Error';
        }
    );

    document.body.getNodesByText('üëç Compiled').forEach(
        el => {
            el.textContent = 'üëç Compiled (–∏ —á–µ? üòê)';
        }
    );

    document.body.getNodesByText('ü§Ø Memory Limit Exceeded').forEach(
        el => {
            el.textContent = 'ü§Ø –û—Ç–¥–∞–π –ø–∞–º—è—Ç—å!';
        }
    );

    document.body.getNodesByText('üîç No Output File').forEach(
        el => {
            el.textContent = 'üîç –§–∞–π–ª –Ω–∞ –≤—ã—Ö–æ–¥?';
        }
    );

    document.body.getNodesByText('üöΩ Presentation Error').forEach(
        el => {
            el.textContent = 'üöΩ –û—à–∏–±–∫–∞ –≤ –ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏–∏';
        }
    );

    document.body.getNodesByText('üî• Run-Time Error').forEach(
        el => {
            el.textContent = 'üî• –ê–ª–ª–æ, –ø–æ–∂–∞—Ä–Ω—ã–µ?';
        }
    );

    document.body.getNodesByText('üíÄ Security Violation').forEach(
        el => {
            el.textContent = 'üíÄ Security Violation';
        }
    );

    document.body.getNodesByText('‚åõ Time Limit Exceeded').forEach(
        el => {
            el.textContent = '‚åõÔ∏è –ù–µ —Ç–æ—Ä–º–æ–∑–∏ - —Å–Ω–∏–∫–µ—Ä—Å–Ω–∏';
        }
    );

    document.body.getNodesByText('üóø Wrong Answer').forEach(
        el => {
            el.innerHTML = '¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†üóø Bruh¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†'.bold();
            el.style.backgroundColor = '#f0f3';
            el.style.color = '#f00f'; // red
            el.style.width = 75;
        }
    );

    document.body.getNodesByText('‚ú® Static Analysis Failed').forEach(
        el => {
            el.textContent = '‚ú® Static Analysis Failed';
        }
    );

    document.body.getNodesByText('üîß Dynamic Analysis Failed').forEach(
        el => {
            el.textContent = 'üîß Dynamic Analysis Failed';
        }
    );

    document.body.getNodesByText('üëÄ Skipped').forEach(
        el => {
            el.textContent = 'üëÄ Skipped';
        }
    );

	
}, how_often);
