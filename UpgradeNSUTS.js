// –ù—É–∂–Ω–æ –±—Ä–∞—É–∑–µ—Ä–Ω–æ–µ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ "User JavaScript and CSS"

// –í –Ω—ë–º —Å—Ç–∞–≤–∏—Ç–µ —Å—Å—ã–ª–∫—É —Ç–∞–±–ª–∏—Ü—É —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏ –≤–∞—à–∏—Ö –ø–æ—Å—ã–ª–æ–∫: 
// https://fresh.nsuts.ru/

// –ï—Å–ª–∏ —à–∞—Ä–∏—Ç–µ –∑–∞ Java-script –º–æ–∂–µ—Ç–µ —Å–≤–æ—ë —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–æ–±–∞–≤–∏—Ç—å
// –•–æ—Ç—è —Ü–≤–µ—Ç–∞ —Å–º–æ–∂–µ—Ç–µ –ø–æ–º–µ–Ω—è—Ç—å –∏ –±–µ–∑ –µ–≥–æ –∑–Ω–∞–Ω–∏—è, –¥—É–º–∞—é

// –ò–ù–û–ì–î–ê –ü–û–ú–û–ì–ê–ï–¢ –ü–ï–†–ï–ó–ê–ì–†–£–ó–ö–ê –°–¢–†–ê–ù–ò–¶–´

// –í—Å—Ç–∞–≤–ª—è–µ—Ç–µ —ç—Ç–æ—Ç –∫–æ–¥ –≤ –ø–æ–ª–µ –¥–ª—è JS, Ctrl+S (—Å–æ—Ö—Ä–∞–Ω–∏—Ç—å):

// how often need update ASSEPTED and other fun text
let how_often = 100; // in ms, milliseconds

// light in ranking
let yourColor = '#A5ECFE'; // BackGroundColor ‚Äî color in ranking
// Dealy before "lighting in ranking"/"deleting a table with attempts" milliseconds.
// If there is no lighting, try to increase the time
let yourDelay = 200; 

let yourTop = 0;

let yourName = '–ú–∞—Ä—Ç—ã–Ω–æ–≤ from t.me/baguette_boys'; // —Ç–æ—á–Ω–æ–µ –∏–º—è –∏–∑ —Ä–µ–π—Ç–∏–Ω–≥–∞
let autoSearch = 1; // –∞–≤—Ç–æ–ø–æ–∏—Å–∫ –∏–º–µ–Ω–∏ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ
let getNameDelay = 500; // –∑–∞–¥–µ—Ä–∂–∫–∞ –≤ –º—Å –ø–µ—Ä–µ–¥ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–º –ø–æ–∏—Å–∫–æ–º –∏–º–µ–Ω–∏

window.onload = function () {  
	if (autoSearch == 1)
    setTimeout(function() {}, 10);(function() {
      // There is only 1 block with the "dropdown" class on the site
      // And it has your name
      yourName = document.getElementsByClassName('dropdown')[0].childNodes[0].textContent;
    }, getNameDelay); 
  }

// your replace text:
testing               = 'üêù –¢–∞–∫, –Ω—É, –ø–æ–¥–æ–∂–¥–∏—Ç–µ...';
accepted              = 'üèÜ ASSEPTED';
compileError          = 'üöß Compile Error'; // –æ–±—ã—á–Ω–æ–µ
deadlock              = 'ü•∂ Deadlock - Timeout'; // –æ–±—ã—á–Ω–æ–µ
judgementFailed       = 'ü§¢ Judgement Failed'; // –æ–±—ã—á–Ω–æ–µ
juryError             = 'ü§Æ Jury Error'; // –æ–±—ã—á–Ω–æ–µ
compiled              = 'üëç Compiled (–∏ —á–µ? üòê)';
memoryLimit           = 'ü§Ø –û—Ç–¥–∞–π –ø–∞–º—è—Ç—å!';
noOutputFile          = 'üîç –§–∞–π–ª –Ω–∞ –≤—ã—Ö–æ–¥?';
presentationError     = 'üöΩ –û—à–∏–±–∫–∞ –≤ –ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏–∏';
runTimeError          = 'üî• –ê–ª–ª–æ, –ø–æ–∂–∞—Ä–Ω—ã–µ?';
securityViolation     = 'üíÄ Security Violation'; // –æ–±—ã—á–Ω–æ–µ
timeLimit             = '‚åõÔ∏è –ù–µ —Ç–æ—Ä–º–æ–∑–∏ - —Å–Ω–∏–∫–µ—Ä—Å–Ω–∏';
wrongAnswer           = '¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†üóø Bruh¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†'.bold();
staticAnalysisFailed  = '‚ú® Static Analysis Failed'; // –æ–±—ã—á–Ω–æ–µ
dynamicAnalysisFailed = 'üîß Dynamic Analysis Failed'; // –æ–±—ã—á–Ω–æ–µ
skipped         = 'üëÄ Skipped'; // –æ–±—ã—á–Ω–æ–µ



// function from Internet for searching text in HTML
HTMLElement.prototype.getNodesByText = function (text) {
  const expr = `.//*[text()[contains(
    translate(.,
      'ABCDEFGHIJKLMNOPQRSTUVWXYZ–ê–ë–í–ì–î–ï–Å–ñ–ó–ò–ô–ö–õ–ú–ù–û–ü–†–°–¢–£–§–•–¶–ß–®–©–™–´–¨–≠–Æ–Ø',
      'abcdefghijklmnopqrstuvwxyz–∞–±–≤–≥–¥–µ—ë–∂–∑–∏–π–∫–ª–º–Ω–æ–ø—Ä—Å—Ç—É—Ñ—Ö—Ü—á—à—â—ä—ã—å—ç—é—è'
    ),
    '${text.toLowerCase()}'
  )]]`;    /* –∫–æ–º–º–µ–Ω—Ç-–∫–æ—Å—Ç—ã–ª—å */
  const nodeSet = document.evaluate(expr, this, null,
    XPathResult.ORDERED_NODE_SNAPSHOT_TYPE,
  null);
  return Array.from({ length: nodeSet.snapshotLength },
    (v, i) => nodeSet.snapshotItem(i)
  );
};


// function that light your name in ranking 
setInterval(function() {
	document.body.getNodesByText('–í —Ç—É—Ä–µ –≤–∫–ª—é—á–µ–Ω–æ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ –Ω–∞ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã—Ö —Ä–µ—à–µ–Ω–∏–π –ø–æ –∑–∞–¥–∞—á–∞–º.').forEach(
		el => {
			// You can insert more parameters, for example:
			el.parentNode.removeChild(el);
		}
	);
}, yourDelay); 





// function that light your name in ranking 
setInterval(function() {
	document.body.getNodesByText(yourName).forEach(
		el => {
			// el ‚Äî –æ—á–µ—Ä–µ–¥–Ω–æ–π HTML blocks with yourName (forEach –ø–µ—Ä–µ–±–∏—Ä–∞–µ—Ç –≤—Å–µ)
			// .parent ‚Äî —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–∏–π –±–ª–æ–∫
			// .getEl...TagName ‚Äî –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∏–∑ —Ä–æ–¥–∏—Ç–µ–ª–µ–π —Ç–æ–ª—å–∫–æ <td> –±–ª–æ–∫–∏
			var htmlCollection = el.parentNode.getElementsByTagName('td');
			
			// if <td> number greater then 0 htmlColl have line with yourName from ranking
			if (htmlCollection.length > 0) { 
				// get your place in ranking:
				yourTop = htmlCollection[0].textContent; 
				
				// coloring the line:
				el.parentNode.parentNode.getElementsByTagName('tr')[yourTop-1].style.backgroundColor = yourColor;
			} // end if
			
		}   // end el
	);    // end ForEach
}, yourDelay); // end setInterval



// function that replace text to fun
setInterval(function () { 
	// document.body.getNodesByText('YOUR TEXT').forEach(
	// 	el => {
	// 		// –ø—Ä–æ—Å—Ç–æ –∑–∞–º–µ–Ω–∏—Ç—å —Ç–µ–∫—Å—Ç. –ú–æ–∂–Ω–æ: "<b> text </b>", –Ω–æ –Ω–∞ html —ç—Ç–æ –Ω–µ –ø–æ–≤–ª–∏—è–µ—Ç –∏ –≤—ã–≤–µ–¥–µ—Ç <b> –∫–∞–∫ 3 —Å–∏–º–≤–æ–ª–∞
	// 		el.textContent = 'NEW TEXT';
			
	// 		// –µ—Å–ª–∏ —Ö–æ—á–µ—à—å –Ω–µ –ø—Ä–æ—Å—Ç–æ —Ç–µ–∫—Å—Ç, –∞ –∏–∑–º–µ–Ω–∏—Ç—å html.
	// 		// –ú–æ–∂–µ—Ç –≤—ã–π—Ç: text, –Ω–æ –∂–∏—Ä–Ω—ã–º —à—Ä–∏—Ñ—Ç–æ–º
	// 		el.innerHTML   = 'NEW TEXT'.bold(); 
			
	// 		// You can insert more parameters, for example:
	// 		//el.style.backgroundColor = '#7f7';
			
	// 		// You can get parentNode
	// 		//el.parentNode.style.backgroundColor = '#7f7';
	// 	}
	// );
	
	
	// document.body.getNodesByText('üêù Testing...').forEach(
 //       el => {
 //           el.textContent = Testing;
 //       }
 //   );
	
	document.body.getNodesByText('üèÜ ACCEPTED').forEach(
        el => {
            el.textContent = 'üèÜ ASSEPTED';
            el.style.backgroundColor = '#0f02';
            el.style.textAlign = 'center';
        }
    ); // end replace ACCEPTED

    document.body.getNodesByText('üöß Compile Error').forEach(
        el => {
            el.textContent = compileError;
        }
    ); // end replace Compile Error

    document.body.getNodesByText('ü•∂ Deadlock - Timeout').forEach(
        el => {
            el.textContent = deadlock;
        }
    ); // end replace DeadLock

    document.body.getNodesByText('ü§¢ Judgement Failed').forEach(
        el => {
            el.textContent = judgementFailed;
        }
    ); // end replace JudgementFailed

    document.body.getNodesByText('ü§Æ Jury Error').forEach(
        el => {
            el.textContent = juryError;
        }
    ); // end replace JuryError

    document.body.getNodesByText('üëç Compiled').forEach(
        el => {
            el.textContent = compiled;
        }
    ); // end replace Compiled

    document.body.getNodesByText('ü§Ø Memory Limit Exceeded').forEach(
        el => {
            el.textContent = memoryLimit;
        }
    ); // end replace MemoryLimit

    document.body.getNodesByText('üîç No Output File').forEach(
        el => {
            el.textContent = noOutputFile;
        }
    ); // end replace NoOutputFile

    document.body.getNodesByText('üöΩ Presentation Error').forEach(
        el => {
            el.textContent = presentationError;
        }
    ); // end replace PresentationError

    document.body.getNodesByText('üî• Run-Time Error').forEach(
        el => {
            el.textContent = runTimeError;
        }
    ); // end replace RunTimeError

    document.body.getNodesByText('üíÄ Security Violation').forEach(
        el => {
            el.textContent = securityViolation;
        }
    ); // end replace SecurityViolation

    document.body.getNodesByText('‚åõ Time Limit Exceeded').forEach(
        el => {
            el.textContent = timeLimit;
        }
    ); // end replace TimeLimit

    document.body.getNodesByText('üóø Wrong Answer').forEach(
        el => {
            el.innerHTML = wrongAnswer;
            el.style.backgroundColor = '#f0f3';
            el.style.color = '#f00f'; // red
            el.style.width = 75;
        }
    ); // end replace WrongAnswer

    document.body.getNodesByText('‚ú® Static Analysis Failed').forEach(
        el => {
            el.textContent = staticAnalysisFailed
        }
    ); // end replace StaticAnalysisFailed

    document.body.getNodesByText('üîß Dynamic Analysis Failed').forEach(
        el => {
            el.textContent = dynamicAnalysisFailed;
        }
    ); // end replace DynamicAnalysisFailed

    document.body.getNodesByText('üëÄ Skipped').forEach(
        el => {
            el.textContent = skipped;
        }
    ); // end replace Skipped

	
}, how_often); // end setInterval() for replace verdicts
