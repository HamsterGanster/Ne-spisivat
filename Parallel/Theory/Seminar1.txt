# Семинар 1
Выпишем процессы, всё по-английски!
Например:
  redB
  usualB
  workerB

Распишем события у каждого процесса:
  workerB:
    leaveWork (просто leave нельзя, ведь тогда совпадёт с обычными клирками)
    comeWork (просто come тоже нельзя)
    work
  usualB:
    leave-uB
    come-uB
    move-uB
    work
    change-uB
  redB:
    move-uB
    change-uB
    crazyMove (chaoticMove)

Как Spin установить — ClassRoom


Среда / User
Сущности зависимые и нет: детерминированность и нет. Объект управления = актуатор.
Актуатор — объект управления.
Чел ведёт машину. Машина — актуатор (объект управления)

Управление не прямое:
   /------> ↓
User       актуатор — нельзя так!
  ↑ <------/

Между ними есть контролер:
User -->  контролер --> актуатор 
  ↑ <----------------------/
ТОЖЕ НЕЛЬЗЯ

Ещё раз нельзя:
  Среда <---------------
    \/                 /\
  датчики (цель: принять сигнал от среды/пользователя) 
    \/                 /\
  контролер            /\
    \/                 /\
  Актуатор --------->  /\


Верная схема:
  Среда <---------------
    \/                 /\
  датчики           Индикаторы
    \/                 /\
  контролер            /\
    \/                 /\
  Актуатор --------->  /\



Следующий шаг (допустимо упрощение, мы им будем пользоваться):
  Среда <------------------
    \/                    /\
  датчики                 /\
    \/                    /\
  контролер  ←←← есть?    /\  может быть, но не желательно
    \/         ↑          /\
  Актуатор + индикатор -> /\ (сочетания индикаторов)


Миша сказал: "А если двигатель греется?"

Актуатор возьмём и выделим в отдельную системку:
  Среда <------------------
    \/                       /\
  датчики                    /\
    \/                       /\
  контролер  ←←← есть?       /\  может быть, но не желательно
    \/         ↑             /\
 ———————————————————————     /\
| Актуатор + индикатор  | -> /\ (сочетания индикаторов)
 ———————————————————————


Вагонетки:
    <----->

 —————            —————               —————
 | 1 |  ------->  | 2 |  ---------->  | 3 |
 —————     ↑      —————               —————
        где-то тут
        жмём stop

1. Процесс–Среда/user — process user
# Среда, датчики, контролер... пишем на русском языке
2. Процесс–Датчики — back-button, forward-button, stop-button, station1-button, station2-button, station3-button, (close-door + open-door) OR (close-open-door).
3. Процесс–Контролер — process_control
4. ОбъектУправления + индикаторы — vagon

# Выпишем множество событий возможных:
User: stay, absent [отсутствие], pressing_button_station1, pressing_button_station2, pressing_button_station3, opening-door, closing-door, pressing_button_back, pressing_button_forward, pressing_button_stop.

# Если процессы взаимодействуют, то события у них одинаковые!
Station1-button: reales, press_but_1, pressed_but_1